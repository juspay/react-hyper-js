// Generated by ReScript, PLEASE EDIT WITH CARE

import * as React from "react";
import * as OrcaJs from "./OrcaJs.bs.js";
import * as Core__JSON from "@rescript/core/src/Core__JSON.bs.js";
import * as Belt_Option from "rescript/lib/es6/belt_Option.js";
import * as Core__Option from "@rescript/core/src/Core__Option.bs.js";

function confirmPaymentFn(_elements) {
  return Promise.resolve({});
}

function confirmCardPaymentFn(_clientSecretId, _data, _options) {
  return Promise.resolve({});
}

function retrievePaymentIntentFn(_paymentIntentId) {
  return Promise.resolve({});
}

function paymentRequest(options) {
  return options;
}

var defaultSwitchContext = {
  clientSecret: "",
  confirmPayment: confirmPaymentFn,
  confirmCardPayment: confirmCardPaymentFn,
  retrievePaymentIntent: retrievePaymentIntentFn,
  paymentRequest: paymentRequest
};

var switchContext = React.createContext(defaultSwitchContext);

var make = switchContext.Provider;

var SwitchContextProvider = {
  make: make
};

var defaultPaymentMethodsManagementSwitchContext = {
  ephemeralKey: "",
  paymentRequest: paymentRequest
};

var paymentMethodsManagementSwitchContext = React.createContext(defaultPaymentMethodsManagementSwitchContext);

var make$1 = paymentMethodsManagementSwitchContext.Provider;

var PaymentMethodsManagementSwitchContextProvider = {
  make: make$1
};

function getString(dict, key, defaultVal) {
  return Core__Option.getOr(Belt_Option.flatMap(dict[key], Core__JSON.Decode.string), defaultVal);
}

function elementsOptionObjMapper(options) {
  var dict = Core__Option.getOr(Core__JSON.Decode.object(options), {});
  return {
          fonts: Core__Option.getOr(Belt_Option.flatMap(dict["fonts"], Core__JSON.Decode.array), []),
          locale: getString(dict, "locale", ""),
          clientSecret: getString(dict, "clientSecret", ""),
          appearance: Core__Option.getOr(Belt_Option.flatMap(dict["appearance"], Core__JSON.Decode.object), {}),
          loader: getString(dict, "loader", "auto")
        };
}

function update(_options) {
  
}

function getElement(_componentName) {
  
}

function fetchUpdates() {
  return new Promise((function (resolve, param) {
                setTimeout((function () {
                        resolve({});
                      }), 1000);
              }));
}

function create(_componentType, _options) {
  return OrcaJs.defaultPaymentElement;
}

var defaultElementsContext_options = {
  fonts: [],
  locale: "",
  clientSecret: "",
  appearance: {},
  loader: ""
};

var defaultElementsContext = {
  options: defaultElementsContext_options,
  update: update,
  getElement: getElement,
  fetchUpdates: fetchUpdates,
  create: create
};

var elementsContext = React.createContext(defaultElementsContext);

var make$2 = elementsContext.Provider;

var ElementsContextProvider = {
  make: make$2
};

function paymentMethodsManagementElementsOptionObjMapper(options) {
  var dict = Core__Option.getOr(Core__JSON.Decode.object(options), {});
  return {
          fonts: Core__Option.getOr(Belt_Option.flatMap(dict["fonts"], Core__JSON.Decode.array), []),
          locale: getString(dict, "locale", ""),
          ephemeralKey: getString(dict, "ephemeralKey", ""),
          appearance: Core__Option.getOr(Belt_Option.flatMap(dict["appearance"], Core__JSON.Decode.object), {}),
          loader: getString(dict, "loader", "auto")
        };
}

var defaultPaymentMethodsManagementElementsContext_options = {
  fonts: [],
  locale: "",
  ephemeralKey: "",
  appearance: {},
  loader: ""
};

var defaultPaymentMethodsManagementElementsContext = {
  options: defaultPaymentMethodsManagementElementsContext_options,
  update: update,
  getElement: getElement,
  fetchUpdates: fetchUpdates,
  create: create
};

var paymentMethodsManagementElementsContext = React.createContext(defaultPaymentMethodsManagementElementsContext);

var make$3 = paymentMethodsManagementElementsContext.Provider;

var PaymentMethodsManagementElementsContextProvider = {
  make: make$3
};

export {
  confirmPaymentFn ,
  confirmCardPaymentFn ,
  retrievePaymentIntentFn ,
  paymentRequest ,
  defaultSwitchContext ,
  switchContext ,
  SwitchContextProvider ,
  defaultPaymentMethodsManagementSwitchContext ,
  paymentMethodsManagementSwitchContext ,
  PaymentMethodsManagementSwitchContextProvider ,
  getString ,
  elementsOptionObjMapper ,
  update ,
  getElement ,
  fetchUpdates ,
  create ,
  defaultElementsContext ,
  elementsContext ,
  ElementsContextProvider ,
  paymentMethodsManagementElementsOptionObjMapper ,
  defaultPaymentMethodsManagementElementsContext ,
  paymentMethodsManagementElementsContext ,
  PaymentMethodsManagementElementsContextProvider ,
}
/* switchContext Not a pure module */
